{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport CidadeDAO from \"../db/CidadeDao\";\nexport var CidadeService = function () {\n  function CidadeService() {\n    _classCallCheck(this, CidadeService);\n  }\n\n  _createClass(CidadeService, null, [{\n    key: \"Obter\",\n    value: function Obter() {\n      var response, cidades;\n      return _regeneratorRuntime.async(function Obter$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(fetch('https://servicodados.ibge.gov.br/api/v1/localidades/municipios?orderBy=nome'));\n\n            case 2:\n              response = _context.sent;\n\n              if (response.ok) {\n                _context.next = 5;\n                break;\n              }\n\n              throw new Error(\"Ocorreu um erro \" + response.status + \" ao obter as cidades.\");\n\n            case 5:\n              _context.next = 7;\n              return _regeneratorRuntime.awrap(response.json());\n\n            case 7:\n              cidades = _context.sent;\n              _context.next = 10;\n              return _regeneratorRuntime.awrap(CidadeDAO.Insert(cidades));\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }]);\n\n  return CidadeService;\n}();","map":{"version":3,"names":["CidadeDAO","CidadeService","fetch","response","ok","Error","status","json","cidades","Insert"],"sources":["D:/Projects/Aula/LocalityMap/Services/cidade.js"],"sourcesContent":["import CidadeDAO from '../db/CidadeDao'\r\n\r\nexport class CidadeService {\r\n  static async Obter () {\r\n    //  Consulta cidades no IBGE\r\n    const response = await fetch('https://servicodados.ibge.gov.br/api/v1/localidades/municipios?orderBy=nome')\r\n\r\n    // Valida response\r\n    if (!response.ok) {\r\n      throw new Error(`Ocorreu um erro ${response.status} ao obter as cidades.`)\r\n    }\r\n\r\n    // Deserializa json\r\n    const cidades = await response.json()\r\n\r\n    // Salva no db\r\n    await CidadeDAO.Insert(cidades)\r\n  }\r\n}\r\n"],"mappings":";;;AAAA,OAAOA,SAAP;AAEA,WAAaC,aAAb;EAAA;IAAA;EAAA;;EAAA;IAAA;IAAA,OACE;MAAA;MAAA;QAAA;UAAA;YAAA;cAAA;cAAA,iCAEyBC,KAAK,CAAC,6EAAD,CAF9B;;YAAA;cAEQC,QAFR;;cAAA,IAKOA,QAAQ,CAACC,EALhB;gBAAA;gBAAA;cAAA;;cAAA,MAMU,IAAIC,KAAJ,sBAA6BF,QAAQ,CAACG,MAAtC,2BANV;;YAAA;cAAA;cAAA,iCAUwBH,QAAQ,CAACI,IAAT,EAVxB;;YAAA;cAUQC,OAVR;cAAA;cAAA,iCAaQR,SAAS,CAACS,MAAV,CAAiBD,OAAjB,CAbR;;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA;EADF;;EAAA;AAAA"},"metadata":{},"sourceType":"module"}