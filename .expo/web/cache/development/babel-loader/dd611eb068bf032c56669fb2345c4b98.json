{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { useNavigation } from '@react-navigation/native';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Fundo from \"../../assets/FundoTelaUser.png\";\nimport QuizzesDao from \"../../db/QuizzesDao\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Quizzes() {\n  var navigation = useNavigation();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      refreshing = _useState2[0],\n      setRefreshing = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      listQuizzes = _useState4[0],\n      setListQuizzes = _useState4[1];\n\n  var formatarTelefone = function formatarTelefone(v) {\n    if (!v) {\n      return '';\n    }\n\n    var r = v.replace(/\\D/g, '');\n    r = r.replace(/^0/, '');\n\n    if (r.length >= 11) {\n      r = r.replace(/^(\\d{2})(\\d)(\\d{4})(\\d{4}).*/, '($1) $2 $3-$4');\n    }\n\n    return r;\n  };\n\n  var Item = function Item(_ref) {\n    var item = _ref.item;\n    return _jsx(View, {\n      style: {\n        padding: 20\n      },\n      children: _jsxs(ImageBackground, {\n        source: Fundo,\n        style: {\n          flex: 1,\n          padding: 10\n        },\n        children: [_jsx(Text, {\n          children: item.nome || '---'\n        }), _jsx(Text, {\n          children: formatarTelefone(item.telefone) || '---'\n        })]\n      })\n    });\n  };\n\n  var renderItem = function renderItem(_ref2) {\n    var item = _ref2.item;\n    return _jsx(Item, {\n      item: item\n    });\n  };\n\n  useEffect(useCallback(function () {\n    var insertQuizzes = function _callee() {\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(QuizzesDao.Insert([{\n                id: 0,\n                numQuizz: 1,\n                nome: \"Quizz Cidades\",\n                descricao: \"Neste quizz você precisa descobrir quais são as cidades pertencentes ao estado escolhido.\"\n              }]).then(function (e) {\n                return alert(e);\n              }).catch(function (e) {\n                return alert(e);\n              }));\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    insertQuizzes();\n\n    var getQuizzes = function _callee2() {\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _regeneratorRuntime.awrap(QuizzesDao.GetQuizzes().then(function (e) {\n                return setListQuizzes(e);\n              }).catch(function (e) {\n                return alert(e);\n              }));\n\n            case 2:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    getQuizzes();\n  }, []));\n\n  var flatListItemSeparator = function flatListItemSeparator() {\n    return _jsx(View, {\n      style: {\n        height: 1,\n        width: \"100%\",\n        backgroundColor: \"#000\"\n      }\n    });\n  };\n\n  return _jsx(SafeAreaView, {\n    style: {\n      flex: 1\n    },\n    children: _jsxs(ImageBackground, {\n      source: Fundo,\n      style: {\n        flex: 1,\n        padding: 10\n      },\n      children: [_jsx(Text, {\n        style: styles.titleTest,\n        children: \"QUIZZES\"\n      }), _jsx(FlatList, {\n        refreshing: refreshing,\n        data: listQuizzes,\n        renderItem: renderItem,\n        ItemSeparatorComponent: flatListItemSeparator,\n        keyExtractor: function keyExtractor(item, index) {\n          return \"\" + index;\n        },\n        ListEmptyComponent: function ListEmptyComponent() {\n          return _jsx(Text, {\n            style: {\n              color: 'white'\n            },\n            children: 'Não há Quizzes para exibir'\n          });\n        },\n        ListFooterComponent: function ListFooterComponent() {\n          return refreshing && _jsx(View, {\n            children: _jsx(Text, {\n              style: {\n                color: 'white'\n              },\n              children: \"Carregando Quizzes...\"\n            })\n          });\n        }\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    paddingHorizontal: 20\n  },\n  titleTest: {\n    marginTop: 30,\n    fontSize: 30,\n    fontWeight: 'bold',\n    color: 'white'\n  },\n  input: {\n    backgroundColor: 'transparent',\n    color: 'black',\n    height: 35,\n    paddingHorizontal: 20,\n    borderColor: 10,\n    borderWidth: 0.7,\n    borderRadius: 50\n  },\n  marginView: {\n    paddingHorizontal: 10,\n    marginVertical: 20\n  },\n  viewButton: {\n    marginTop: 10\n  },\n  button: {\n    borderRadius: 20,\n    color: 'white',\n    backgroundColor: '#2196f3',\n    padding: 10,\n    width: '100%',\n    alignItems: 'center'\n  }\n});","map":{"version":3,"sources":["D:/Projects/Aula/LocalityMap/scenes/Quizes/index.js"],"names":["useNavigation","React","useCallback","useEffect","useState","Fundo","QuizzesDao","Quizzes","navigation","refreshing","setRefreshing","listQuizzes","setListQuizzes","formatarTelefone","v","r","replace","length","Item","item","padding","flex","nome","telefone","renderItem","insertQuizzes","Insert","id","numQuizz","descricao","then","e","alert","catch","getQuizzes","GetQuizzes","flatListItemSeparator","height","width","backgroundColor","styles","titleTest","index","color","StyleSheet","create","container","justifyContent","paddingHorizontal","marginTop","fontSize","fontWeight","input","borderColor","borderWidth","borderRadius","marginView","marginVertical","viewButton","button","alignItems"],"mappings":";;AAAA,SAASA,aAAT,QAA8B,0BAA9B;AACA,OAAOC,KAAP,IAAgBC,WAAhB,EAA6BC,SAA7B,EAAwCC,QAAxC,QAAwD,OAAxD;;;;;;;;AAGA,OAAOC,KAAP;AACA,OAAOC,UAAP;;;AAEA,eAAe,SAASC,OAAT,GAAmB;AAC9B,MAAMC,UAAU,GAAGR,aAAa,EAAhC;;AAEA,kBAAoCI,QAAQ,CAAC,KAAD,CAA5C;AAAA;AAAA,MAAOK,UAAP;AAAA,MAAmBC,aAAnB;;AACA,mBAAsCN,QAAQ,CAAC,EAAD,CAA9C;AAAA;AAAA,MAAOO,WAAP;AAAA,MAAoBC,cAApB;;AAEA,MAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,CAAD,EAAO;AAC5B,QAAI,CAACA,CAAL,EAAQ;AACJ,aAAO,EAAP;AACH;;AACD,QAAIC,CAAC,GAAGD,CAAC,CAACE,OAAF,CAAU,KAAV,EAAiB,EAAjB,CAAR;AACAD,IAAAA,CAAC,GAAGA,CAAC,CAACC,OAAF,CAAU,IAAV,EAAgB,EAAhB,CAAJ;;AAEA,QAAID,CAAC,CAACE,MAAF,IAAY,EAAhB,EAAoB;AAChBF,MAAAA,CAAC,GAAGA,CAAC,CAACC,OAAF,CAAU,8BAAV,EAA0C,eAA1C,CAAJ;AACH;;AACD,WAAOD,CAAP;AACH,GAXD;;AAaA,MAAMG,IAAI,GAAG,SAAPA,IAAO,OAAc;AAAA,QAAXC,IAAW,QAAXA,IAAW;AACvB,WACI,KAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAAEC,QAAAA,OAAO,EAAE;AAAX,OAAb;AAAA,gBACI,MAAC,eAAD;AAAiB,QAAA,MAAM,EAAEf,KAAzB;AAAgC,QAAA,KAAK,EAAE;AAAEgB,UAAAA,IAAI,EAAE,CAAR;AAAWD,UAAAA,OAAO,EAAE;AAApB,SAAvC;AAAA,mBACI,KAAC,IAAD;AAAA,oBAAOD,IAAI,CAACG,IAAL,IAAa;AAApB,UADJ,EAEI,KAAC,IAAD;AAAA,oBAAOT,gBAAgB,CAACM,IAAI,CAACI,QAAN,CAAhB,IAAmC;AAA1C,UAFJ;AAAA;AADJ,MADJ;AAQH,GATD;;AAWA,MAAMC,UAAU,GAAG,SAAbA,UAAa;AAAA,QAAGL,IAAH,SAAGA,IAAH;AAAA,WACf,KAAC,IAAD;AAAM,MAAA,IAAI,EAAEA;AAAZ,MADe;AAAA,GAAnB;;AAIAhB,EAAAA,SAAS,CAACD,WAAW,CAAC,YAAM;AACxB,QAAMuB,aAAa,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CACZnB,UAAU,CAACoB,MAAX,CAAkB,CAAC;AACrBC,gBAAAA,EAAE,EAAE,CADiB;AAErBC,gBAAAA,QAAQ,EAAE,CAFW;AAGrBN,gBAAAA,IAAI,EAAE,eAHe;AAIrBO,gBAAAA,SAAS,EAAE;AAJU,eAAD,CAAlB,EAMDC,IANC,CAMI,UAACC,CAAD;AAAA,uBAAOC,KAAK,CAACD,CAAD,CAAZ;AAAA,eANJ,EAODE,KAPC,CAOK,UAACF,CAAD;AAAA,uBAAOC,KAAK,CAACD,CAAD,CAAZ;AAAA,eAPL,CADY;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAtB;;AAUAN,IAAAA,aAAa;;AAEb,QAAMS,UAAU,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CACT5B,UAAU,CAAC6B,UAAX,GACDL,IADC,CACI,UAACC,CAAD;AAAA,uBAAOnB,cAAc,CAACmB,CAAD,CAArB;AAAA,eADJ,EAEDE,KAFC,CAEK,UAACF,CAAD;AAAA,uBAAOC,KAAK,CAACD,CAAD,CAAZ;AAAA,eAFL,CADS;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAnB;;AAKAG,IAAAA,UAAU;AACb,GAnBoB,EAmBlB,EAnBkB,CAAZ,CAAT;;AAqBA,MAAME,qBAAqB,GAAG,SAAxBA,qBAAwB,GAAM;AAChC,WACI,KAAC,IAAD;AACI,MAAA,KAAK,EAAE;AACHC,QAAAA,MAAM,EAAE,CADL;AAEHC,QAAAA,KAAK,EAAE,MAFJ;AAGHC,QAAAA,eAAe,EAAE;AAHd;AADX,MADJ;AASH,GAVD;;AAYA,SACI,KAAC,YAAD;AAAc,IAAA,KAAK,EAAE;AAAElB,MAAAA,IAAI,EAAE;AAAR,KAArB;AAAA,cACI,MAAC,eAAD;AAAiB,MAAA,MAAM,EAAEhB,KAAzB;AAAgC,MAAA,KAAK,EAAE;AAAEgB,QAAAA,IAAI,EAAE,CAAR;AAAWD,QAAAA,OAAO,EAAE;AAApB,OAAvC;AAAA,iBACI,KAAC,IAAD;AAAM,QAAA,KAAK,EAAEoB,MAAM,CAACC,SAApB;AAAA;AAAA,QADJ,EAEI,KAAC,QAAD;AACI,QAAA,UAAU,EAAEhC,UADhB;AAEI,QAAA,IAAI,EAAEE,WAFV;AAGI,QAAA,UAAU,EAAEa,UAHhB;AAII,QAAA,sBAAsB,EAAEY,qBAJ5B;AAKI,QAAA,YAAY,EAAE,sBAACjB,IAAD,EAAOuB,KAAP;AAAA,sBAAoBA,KAApB;AAAA,SALlB;AAMI,QAAA,kBAAkB,EAAE;AAAA,iBAAM,KAAC,IAAD;AAAM,YAAA,KAAK,EAAE;AAAEC,cAAAA,KAAK,EAAE;AAAT,aAAb;AAAA,sBAAkC;AAAlC,YAAN;AAAA,SANxB;AAOI,QAAA,mBAAmB,EAAE;AAAA,iBAAMlC,UAAU,IACjC,KAAC,IAAD;AAAA,sBACI,KAAC,IAAD;AAAM,cAAA,KAAK,EAAE;AAAEkC,gBAAAA,KAAK,EAAE;AAAT,eAAb;AAAA;AAAA;AADJ,YADiB;AAAA;AAPzB,QAFJ;AAAA;AADJ,IADJ;AAoBH;AAED,IAAMH,MAAM,GAAGI,UAAU,CAACC,MAAX,CAAkB;AAC7BC,EAAAA,SAAS,EAAE;AACPzB,IAAAA,IAAI,EAAE,CADC;AAEP0B,IAAAA,cAAc,EAAE,QAFT;AAGPC,IAAAA,iBAAiB,EAAE;AAHZ,GADkB;AAM7BP,EAAAA,SAAS,EAAE;AACPQ,IAAAA,SAAS,EAAE,EADJ;AAEPC,IAAAA,QAAQ,EAAE,EAFH;AAGPC,IAAAA,UAAU,EAAE,MAHL;AAIPR,IAAAA,KAAK,EAAE;AAJA,GANkB;AAY7BS,EAAAA,KAAK,EAAE;AACHb,IAAAA,eAAe,EAAE,aADd;AAEHI,IAAAA,KAAK,EAAE,OAFJ;AAGHN,IAAAA,MAAM,EAAE,EAHL;AAIHW,IAAAA,iBAAiB,EAAE,EAJhB;AAKHK,IAAAA,WAAW,EAAE,EALV;AAMHC,IAAAA,WAAW,EAAE,GANV;AAOHC,IAAAA,YAAY,EAAE;AAPX,GAZsB;AAqB7BC,EAAAA,UAAU,EAAE;AACRR,IAAAA,iBAAiB,EAAE,EADX;AAERS,IAAAA,cAAc,EAAE;AAFR,GArBiB;AAyB7BC,EAAAA,UAAU,EAAE;AACRT,IAAAA,SAAS,EAAE;AADH,GAzBiB;AA4B7BU,EAAAA,MAAM,EAAE;AACJJ,IAAAA,YAAY,EAAE,EADV;AAEJZ,IAAAA,KAAK,EAAE,OAFH;AAGJJ,IAAAA,eAAe,EAAE,SAHb;AAIJnB,IAAAA,OAAO,EAAE,EAJL;AAKJkB,IAAAA,KAAK,EAAE,MALH;AAMJsB,IAAAA,UAAU,EAAE;AANR;AA5BqB,CAAlB,CAAf","sourcesContent":["import { useNavigation } from '@react-navigation/native';\r\nimport React, { useCallback, useEffect, useState } from 'react';\r\nimport { FlatList, SafeAreaView, StyleSheet, Text, View, ImageBackground, Platform } from 'react-native';\r\n\r\nimport Fundo from '../../assets/FundoTelaUser.png';\r\nimport QuizzesDao from '../../db/QuizzesDao'\r\n\r\nexport default function Quizzes() {\r\n    const navigation = useNavigation()\r\n\r\n    const [refreshing, setRefreshing] = useState(false)\r\n    const [listQuizzes, setListQuizzes] = useState([])\r\n\r\n    const formatarTelefone = (v) => {\r\n        if (!v) {\r\n            return ''\r\n        }\r\n        let r = v.replace(/\\D/g, '')\r\n        r = r.replace(/^0/, '')\r\n\r\n        if (r.length >= 11) {\r\n            r = r.replace(/^(\\d{2})(\\d)(\\d{4})(\\d{4}).*/, '($1) $2 $3-$4')\r\n        }\r\n        return r\r\n    }\r\n\r\n    const Item = ({ item }) => {\r\n        return (\r\n            <View style={{ padding: 20 }}>\r\n                <ImageBackground source={Fundo} style={{ flex: 1, padding: 10 }}>\r\n                    <Text>{item.nome || '---'}</Text>\r\n                    <Text>{formatarTelefone(item.telefone) || '---'}</Text>\r\n                </ImageBackground>\r\n            </View>\r\n        )\r\n    }\r\n\r\n    const renderItem = ({ item }) => (\r\n        <Item item={item} />\r\n    )\r\n\r\n    useEffect(useCallback(() => {\r\n        const insertQuizzes = async () => {\r\n            await QuizzesDao.Insert([{\r\n                id: 0,\r\n                numQuizz: 1,\r\n                nome: \"Quizz Cidades\",\r\n                descricao: \"Neste quizz você precisa descobrir quais são as cidades pertencentes ao estado escolhido.\"\r\n            }])\r\n                .then((e) => alert(e))\r\n                .catch((e) => alert(e))\r\n        }\r\n        insertQuizzes()\r\n\r\n        const getQuizzes = async () => {\r\n            await QuizzesDao.GetQuizzes()\r\n                .then((e) => setListQuizzes(e))\r\n                .catch((e) => alert(e))\r\n        }\r\n        getQuizzes()\r\n    }, []))\r\n\r\n    const flatListItemSeparator = () => {\r\n        return (\r\n            <View\r\n                style={{\r\n                    height: 1,\r\n                    width: \"100%\",\r\n                    backgroundColor: \"#000\",\r\n                }}\r\n            />\r\n        );\r\n    }\r\n\r\n    return (\r\n        <SafeAreaView style={{ flex: 1 }}>\r\n            <ImageBackground source={Fundo} style={{ flex: 1, padding: 10 }}>\r\n                <Text style={styles.titleTest}>QUIZZES</Text>\r\n                <FlatList\r\n                    refreshing={refreshing}\r\n                    data={listQuizzes}\r\n                    renderItem={renderItem}\r\n                    ItemSeparatorComponent={flatListItemSeparator}\r\n                    keyExtractor={(item, index) => `${index}`}\r\n                    ListEmptyComponent={() => <Text style={{ color: 'white' }}>{'Não há Quizzes para exibir'}</Text>}\r\n                    ListFooterComponent={() => refreshing && (\r\n                        <View>\r\n                            <Text style={{ color: 'white' }}>Carregando Quizzes...</Text>\r\n                        </View>\r\n                    )}\r\n                />\r\n            </ImageBackground>\r\n        </SafeAreaView>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        justifyContent: 'center',\r\n        paddingHorizontal: 20\r\n    },\r\n    titleTest: {\r\n        marginTop: 30,\r\n        fontSize: 30,\r\n        fontWeight: 'bold',\r\n        color: 'white',\r\n    },\r\n    input: {\r\n        backgroundColor: 'transparent',\r\n        color: 'black',\r\n        height: 35,\r\n        paddingHorizontal: 20,\r\n        borderColor: 10,\r\n        borderWidth: 0.7,\r\n        borderRadius: 50\r\n    },\r\n    marginView: {\r\n        paddingHorizontal: 10,\r\n        marginVertical: 20\r\n    },\r\n    viewButton: {\r\n        marginTop: 10\r\n    },\r\n    button: {\r\n        borderRadius: 20,\r\n        color: 'white',\r\n        backgroundColor: '#2196f3',\r\n        padding: 10,\r\n        width: '100%',\r\n        alignItems: 'center'\r\n    }\r\n})"]},"metadata":{},"sourceType":"module"}