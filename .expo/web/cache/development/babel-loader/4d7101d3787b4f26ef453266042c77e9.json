{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ModalLoading from \"../Modals/ModalLoading\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function BuscarDados() {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      message = _useState4[0],\n      setMessage = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      paises = _useState6[0],\n      setPaises = _useState6[1];\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      estados = _useState8[0],\n      setEstatos = _useState8[1];\n\n  var _useState9 = useState([]),\n      _useState10 = _slicedToArray(_useState9, 2),\n      cidades = _useState10[0],\n      setCidades = _useState10[1];\n\n  var buscarPaises = function _callee() {\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            axios.get(\"https://servicodados.ibge.gov.br/api/v1/paises\").then(function (v) {\n              console.log(\"Paises\");\n            }).catch(function (e) {\n              console.log(\"Erro ao buscar cidades: \" + e.message);\n            });\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var buscarEstados = function _callee2() {\n    return _regeneratorRuntime.async(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            axios.get(\"https://servicodados.ibge.gov.br/api/v1/localidades/municipios\").then(function (v) {\n              console.log(\"Estados\");\n            }).catch(function (e) {\n              console.log(\"Erro ao buscar cidades: \" + e.message);\n            });\n\n          case 1:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var buscarCidades = function _callee3() {\n    return _regeneratorRuntime.async(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            axios.get(\"https://servicodados.ibge.gov.br/api/v1/localidades/municipios\").then(function (v) {\n              console.log | \"Cidades\";\n            }).catch(function (e) {\n              console.log(\"Erro ao buscar cidades: \" + e.message);\n            }).finally(function () {\n              console.log(\"Acabou\");\n            });\n\n          case 1:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    setLoading(true);\n    setMessage(\"Buscando Paises\");\n    buscarPaises();\n    setMessage(\"Buscando Estados\");\n    buscarEstados();\n    setMessage(\"Buscando Cidades\");\n    buscarCidades();\n    setTimeout(function () {\n      return setLoading(false);\n    }, 10000);\n  }, []);\n  return _jsx(View, {\n    children: _jsx(ModalLoading, {\n      loading: loading,\n      onClose: setLoading,\n      message: message\n    })\n  });\n}","map":{"version":3,"sources":["D:/Projects/Aula/LocalityMap/components/Ultils/BuscarDados.js"],"names":["React","useEffect","useState","axios","ModalLoading","BuscarDados","loading","setLoading","message","setMessage","paises","setPaises","estados","setEstatos","cidades","setCidades","buscarPaises","get","then","v","console","log","catch","e","buscarEstados","buscarCidades","finally","setTimeout"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,OAAOC,YAAP;;AAEA,eAAe,SAASC,WAAT,GAAuB;AAClC,kBAA8BH,QAAQ,CAAC,KAAD,CAAtC;AAAA;AAAA,MAAOI,OAAP;AAAA,MAAgBC,UAAhB;;AACA,mBAA8BL,QAAQ,CAAC,EAAD,CAAtC;AAAA;AAAA,MAAOM,OAAP;AAAA,MAAgBC,UAAhB;;AAEA,mBAA4BP,QAAQ,CAAC,EAAD,CAApC;AAAA;AAAA,MAAOQ,MAAP;AAAA,MAAeC,SAAf;;AACA,mBAA8BT,QAAQ,CAAC,EAAD,CAAtC;AAAA;AAAA,MAAOU,OAAP;AAAA,MAAgBC,UAAhB;;AACA,mBAA8BX,QAAQ,CAAC,EAAD,CAAtC;AAAA;AAAA,MAAOY,OAAP;AAAA,MAAgBC,UAAhB;;AAEA,MAAMC,YAAY,GAAG;AAAA;AAAA;AAAA;AAAA;AACjBb,YAAAA,KAAK,CAACc,GAAN,CAAU,gDAAV,EACKC,IADL,CACU,UAACC,CAAD,EAAO;AACTC,cAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACH,aAHL,EAIKC,KAJL,CAIW,UAACC,CAAD,EAAO;AACVH,cAAAA,OAAO,CAACC,GAAR,8BAAuCE,CAAC,CAACf,OAAzC;AACH,aANL;;AADiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAArB;;AAUA,MAAMgB,aAAa,GAAG;AAAA;AAAA;AAAA;AAAA;AAClBrB,YAAAA,KAAK,CAACc,GAAN,CAAU,gEAAV,EACKC,IADL,CACU,UAACC,CAAD,EAAO;AACTC,cAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACH,aAHL,EAIKC,KAJL,CAIW,UAACC,CAAD,EAAO;AACVH,cAAAA,OAAO,CAACC,GAAR,8BAAuCE,CAAC,CAACf,OAAzC;AACH,aANL;;AADkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAtB;;AAUA,MAAMiB,aAAa,GAAG;AAAA;AAAA;AAAA;AAAA;AAClBtB,YAAAA,KAAK,CAACc,GAAN,CAAU,gEAAV,EACKC,IADL,CACU,UAACC,CAAD,EAAO;AACVC,cAAAA,OAAO,CAACC,GAAR,GAAa,SAAb;AACF,aAHL,EAIKC,KAJL,CAIW,UAACC,CAAD,EAAO;AACVH,cAAAA,OAAO,CAACC,GAAR,8BAAuCE,CAAC,CAACf,OAAzC;AACH,aANL,EAOKkB,OAPL,CAOa,YAAM;AACXN,cAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACH,aATL;;AADkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAtB;;AAaApB,EAAAA,SAAS,CAAC,YAAM;AACZM,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAE,IAAAA,UAAU,CAAC,iBAAD,CAAV;AACAO,IAAAA,YAAY;AACZP,IAAAA,UAAU,CAAC,kBAAD,CAAV;AACAe,IAAAA,aAAa;AACbf,IAAAA,UAAU,CAAC,kBAAD,CAAV;AACAgB,IAAAA,aAAa;AACbE,IAAAA,UAAU,CAAC;AAAA,aAAMpB,UAAU,CAAC,KAAD,CAAhB;AAAA,KAAD,EAA0B,KAA1B,CAAV;AACH,GATQ,EASN,EATM,CAAT;AAWA,SACI,KAAC,IAAD;AAAA,cACI,KAAC,YAAD;AACI,MAAA,OAAO,EAAED,OADb;AAEI,MAAA,OAAO,EAAEC,UAFb;AAGI,MAAA,OAAO,EAAEC;AAHb;AADJ,IADJ;AASH","sourcesContent":["import React, { useEffect, useState } from \"react\"\r\nimport axios from \"axios\"\r\nimport { View } from \"react-native\"\r\nimport ModalLoading from \"../Modals/ModalLoading\"\r\n\r\nexport default function BuscarDados() {\r\n    const [loading, setLoading] = useState(false)\r\n    const [message, setMessage] = useState(\"\")\r\n\r\n    const [paises, setPaises] = useState([])\r\n    const [estados, setEstatos] = useState([])\r\n    const [cidades, setCidades] = useState([])\r\n\r\n    const buscarPaises = async () => {\r\n        axios.get(\"https://servicodados.ibge.gov.br/api/v1/paises\")\r\n            .then((v) => {\r\n                console.log(\"Paises\")\r\n            })\r\n            .catch((e) => {\r\n                console.log(`Erro ao buscar cidades: ${e.message}`)\r\n            })\r\n    }\r\n\r\n    const buscarEstados = async () => {\r\n        axios.get(\"https://servicodados.ibge.gov.br/api/v1/localidades/municipios\")\r\n            .then((v) => {\r\n                console.log(\"Estados\")\r\n            })\r\n            .catch((e) => {\r\n                console.log(`Erro ao buscar cidades: ${e.message}`)\r\n            })\r\n    }\r\n\r\n    const buscarCidades = async () => {\r\n        axios.get(\"https://servicodados.ibge.gov.br/api/v1/localidades/municipios\")\r\n            .then((v) => {\r\n               console.log|(\"Cidades\")\r\n            })\r\n            .catch((e) => {\r\n                console.log(`Erro ao buscar cidades: ${e.message}`)\r\n            })\r\n            .finally(() => {\r\n                console.log(\"Acabou\")\r\n            })\r\n    }\r\n\r\n    useEffect(() => {\r\n        setLoading(true)\r\n        setMessage(\"Buscando Paises\")\r\n        buscarPaises()\r\n        setMessage(\"Buscando Estados\")\r\n        buscarEstados()\r\n        setMessage(\"Buscando Cidades\")\r\n        buscarCidades()\r\n        setTimeout(() => setLoading(false), 10000)\r\n    }, [])\r\n\r\n    return (\r\n        <View>\r\n            <ModalLoading\r\n                loading={loading}\r\n                onClose={setLoading}\r\n                message={message}\r\n            />\r\n        </View>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}