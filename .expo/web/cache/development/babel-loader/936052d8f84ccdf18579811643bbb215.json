{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Sqlite from \"./Sqlite\";\n\nvar PaisDao = function () {\n  function PaisDao() {\n    _classCallCheck(this, PaisDao);\n  }\n\n  _createClass(PaisDao, null, [{\n    key: \"Insert\",\n    value: function Insert(value) {\n      return new Promise(function (resolve, reject) {\n        var db = Sqlite.getDb();\n        db.transaction(function (tx) {\n          var parameters = [value.id, value.sigla, value.nome];\n          tx.executeSql(\"insert or replace into Pais values (\" + parameters.map(function () {\n            return '?';\n          }).join(',') + \")\", parameters);\n        }, reject, resolve);\n      });\n    }\n  }, {\n    key: \"GetPais\",\n    value: function GetPais() {\n      return new Promise(function (resolve, reject) {\n        var db = Sqlite.getDb();\n        var query = 'select * from Pais';\n        db.transaction(function (tx) {\n          tx.executeSql(query, [], function (_, _ref) {\n            var rows = _ref.rows;\n            return resolve(rows);\n          }, function (_, error) {\n            return reject(error);\n          });\n        });\n      });\n    }\n  }]);\n\n  return PaisDao;\n}();\n\nexport { PaisDao as default };","map":{"version":3,"sources":["D:/Projects/Aula/LocalityMap/db/PaisDao.js"],"names":["Sqlite","PaisDao","value","Promise","resolve","reject","db","getDb","transaction","tx","parameters","id","sigla","nome","executeSql","map","join","query","_","rows","error"],"mappings":";;;AACA,OAAOA,MAAP;;IAEqBC,O;;;;;;;WAEjB,gBAAcC,KAAd,EAAqB;AACjB,aAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,YAAMC,EAAE,GAAGN,MAAM,CAACO,KAAP,EAAX;AAEAD,QAAAA,EAAE,CAACE,WAAH,CAAe,UAAAC,EAAE,EAAI;AACjB,cAAMC,UAAU,GAAG,CACfR,KAAK,CAACS,EADS,EAEfT,KAAK,CAACU,KAFS,EAGfV,KAAK,CAACW,IAHS,CAAnB;AAKAJ,UAAAA,EAAE,CAACK,UAAH,0CAAqDJ,UAAU,CAACK,GAAX,CAAe;AAAA,mBAAM,GAAN;AAAA,WAAf,EAA0BC,IAA1B,CAA+B,GAA/B,CAArD,QAA6FN,UAA7F;AACH,SAPD,EAOGL,MAPH,EAOWD,OAPX;AAQH,OAXM,CAAP;AAYH;;;WAED,mBAAiB;AACb,aAAO,IAAID,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,YAAMC,EAAE,GAAGN,MAAM,CAACO,KAAP,EAAX;AAEA,YAAMU,KAAK,GAAG,oBAAd;AAEAX,QAAAA,EAAE,CAACE,WAAH,CAAe,UAAAC,EAAE,EAAI;AACjBA,UAAAA,EAAE,CAACK,UAAH,CAAcG,KAAd,EAAqB,EAArB,EAAyB,UAACC,CAAD;AAAA,gBAAMC,IAAN,QAAMA,IAAN;AAAA,mBAAiBf,OAAO,CAACe,IAAD,CAAxB;AAAA,WAAzB,EAAyD,UAACD,CAAD,EAAIE,KAAJ,EAAc;AAAE,mBAAOf,MAAM,CAACe,KAAD,CAAb;AAAsB,WAA/F;AACH,SAFD;AAGH,OARM,CAAP;AASH;;;;;;SA3BgBnB,O","sourcesContent":["import { Platform } from 'react-native'\r\nimport Sqlite from './Sqlite'\r\n\r\nexport default class PaisDao {\r\n\r\n    static Insert(value) {\r\n        return new Promise((resolve, reject) => {\r\n            const db = Sqlite.getDb()\r\n\r\n            db.transaction(tx => {\r\n                const parameters = [\r\n                    value.id,\r\n                    value.sigla,\r\n                    value.nome\r\n                ]\r\n                tx.executeSql(`insert or replace into Pais values (${parameters.map(() => '?').join(',')})`, parameters)\r\n            }, reject, resolve)\r\n        })\r\n    }\r\n\r\n    static GetPais() {\r\n        return new Promise((resolve, reject) => {\r\n            const db = Sqlite.getDb()\r\n\r\n            const query = 'select * from Pais'\r\n\r\n            db.transaction(tx => {\r\n                tx.executeSql(query, [], (_, { rows }) => resolve(rows), (_, error) => { return reject(error) })\r\n            })\r\n        })\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}