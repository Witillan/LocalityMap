{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { useNavigation } from '@react-navigation/native';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport Fundo from \"../../assets/FundoTelaUser.png\";\nimport Logo from \"../../assets/MapaCirculoPNG.png\";\nimport Button from \"../../components/Buttons/Button\";\nimport ModalValidation from \"../../components/Modals/ModalValidation\";\nimport ModalError from \"../../components/Modals/ModalError\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function GetNomeUser() {\n  var navigation = useNavigation();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      modalValidation = _useState2[0],\n      setModalValidation = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      modalError = _useState4[0],\n      setModalError = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      nomeUser = _useState6[0],\n      setNomeUser = _useState6[1];\n\n  var entrar = function _callee() {\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!(nomeUser == '' || nomeUser == null || nomeUser == undefined)) {\n              _context.next = 3;\n              break;\n            }\n\n            setModalValidation(true);\n            return _context.abrupt(\"return\");\n\n          case 3:\n            _context.prev = 3;\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem('@nomeusuario', nomeUser));\n\n          case 6:\n            navigation.navigate('Quizzes');\n            _context.next = 12;\n            break;\n\n          case 9:\n            _context.prev = 9;\n            _context.t0 = _context[\"catch\"](3);\n            setModalError(true);\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[3, 9]], Promise);\n  };\n\n  return _jsx(SafeAreaView, {\n    style: {\n      flex: 1\n    },\n    children: _jsx(ImageBackground, {\n      source: Fundo,\n      style: {\n        flex: 1,\n        backgroundColor: '#59D89E',\n        justifyContent: 'center',\n        alignItems: 'center'\n      },\n      children: _jsxs(ScrollView, {\n        contentContainerStyle: {\n          flex: 1,\n          justifyContent: 'center'\n        },\n        children: [_jsxs(View, {\n          style: {\n            justifyContent: 'center',\n            alignItems: 'center'\n          },\n          children: [_jsx(ImageBackground, {\n            style: {\n              padding: 0,\n              width: 100,\n              height: 100,\n              justifyContent: 'center',\n              alignItems: 'center'\n            },\n            source: Logo,\n            children: _jsx(Text, {\n              style: {\n                padding: 0,\n                fontSize: 80,\n                color: 'white'\n              },\n              children: \"?\"\n            })\n          }), _jsx(Text, {\n            style: styles.titleTest,\n            children: \"LOCALITY MAP\"\n          })]\n        }), _jsx(View, {\n          style: styles.marginView,\n          children: _jsx(View, {\n            children: _jsx(TextInput, {\n              focusable: false,\n              style: styles.input,\n              onChangeText: setNomeUser,\n              value: nomeUser,\n              placeholder: \"Seu apelido\",\n              keyboardType: \"default\",\n              placeholderTextColor: \"white\"\n            })\n          })\n        }), _jsx(View, {\n          style: {\n            marginTop: 50,\n            width: '100%',\n            alignItems: 'center'\n          },\n          children: _jsx(Button, {\n            color: \"#2B44FF\",\n            colorLabel: \"#FFFFFF\",\n            label: \"ENTRAR\",\n            onPress: entrar\n          })\n        }), _jsx(ModalValidation, {\n          value: modalValidation,\n          onClose: setModalValidation,\n          title: 'Ops..',\n          message: 'Você precisa colocar um nome para continuar'\n        }), _jsx(ModalError, {\n          value: modalError,\n          onClose: setModalError,\n          message: 'Ocorreu um erro com seu apelido, por favor feche o jogo e tente novamente mais tarde!'\n        })]\n      })\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center'\n  },\n  titleTest: {\n    marginLeft: 10,\n    fontSize: 20,\n    fontWeight: 'bold',\n    color: 'white'\n  },\n  input: {\n    backgroundColor: 'transparent',\n    color: 'white',\n    height: 35,\n    paddingHorizontal: 20,\n    borderColor: 10,\n    borderWidth: 1,\n    borderColor: '#5DA2FF',\n    borderRadius: 50,\n    width: 250\n  },\n  marginView: {\n    paddingHorizontal: 10,\n    marginVertical: 20\n  },\n  viewButton: {\n    marginTop: 10\n  }\n});","map":{"version":3,"names":["useNavigation","React","useCallback","useEffect","useState","AsyncStorage","Fundo","Logo","Button","ModalValidation","ModalError","GetNomeUser","navigation","modalValidation","setModalValidation","modalError","setModalError","nomeUser","setNomeUser","entrar","undefined","setItem","navigate","flex","backgroundColor","justifyContent","alignItems","padding","width","height","fontSize","color","styles","titleTest","marginView","input","marginTop","StyleSheet","create","container","marginLeft","fontWeight","paddingHorizontal","borderColor","borderWidth","borderRadius","marginVertical","viewButton"],"sources":["D:/Projects/Aula/LocalityMap/scenes/NomeUser/GetNomeUser.js"],"sourcesContent":["import { useNavigation } from '@react-navigation/native';\r\nimport React, { useCallback, useEffect, useState } from 'react';\r\nimport { ImageBackground, SafeAreaView, ScrollView, StyleSheet, Text, TextInput, View } from 'react-native';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\n\r\nimport Fundo from '../../assets/FundoTelaUser.png';\r\nimport Logo from '../../assets/MapaCirculoPNG.png';\r\nimport Button from '../../components/Buttons/Button';\r\nimport ModalValidation from '../../components/Modals/ModalValidation';\r\nimport ModalError from '../../components/Modals/ModalError';\r\n\r\nexport default function GetNomeUser() {\r\n    const navigation = useNavigation()\r\n    const [modalValidation, setModalValidation] = useState(false)\r\n    const [modalError, setModalError] = useState(false)\r\n\r\n    const [nomeUser, setNomeUser] = useState('');\r\n\r\n    const entrar = async () => {\r\n        if (nomeUser == '' || nomeUser == null || nomeUser == undefined) {\r\n            setModalValidation(true)\r\n            return\r\n        }\r\n        try {\r\n            await AsyncStorage.setItem('@nomeusuario', nomeUser)\r\n            navigation.navigate('Quizzes')\r\n        } catch (error) {\r\n            setModalError(true)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <SafeAreaView style={{ flex: 1 }}>\r\n            <ImageBackground source={Fundo} style={{ flex: 1, backgroundColor: '#59D89E', justifyContent: 'center', alignItems: 'center' }}>\r\n                <ScrollView contentContainerStyle={{ flex: 1, justifyContent: 'center' }}>\r\n                    <View style={{ justifyContent: 'center', alignItems: 'center' }}>\r\n                        <ImageBackground style={{ padding: 0, width: 100, height: 100, justifyContent: 'center', alignItems: 'center' }} source={Logo}><Text style={{ padding: 0, fontSize: 80, color: 'white' }}>?</Text></ImageBackground>\r\n                        <Text style={styles.titleTest}>LOCALITY MAP</Text>\r\n                    </View>\r\n                    <View style={styles.marginView}>\r\n                        <View>\r\n                            <TextInput\r\n                                focusable={false}\r\n                                style={styles.input}\r\n                                onChangeText={setNomeUser}\r\n                                value={nomeUser}\r\n                                placeholder=\"Seu apelido\"\r\n                                keyboardType=\"default\"\r\n                                placeholderTextColor='white'\r\n                            />\r\n                        </View>\r\n                    </View>\r\n                    <View style={{ marginTop: 50, width: '100%', alignItems: 'center' }}>\r\n                        <Button\r\n                            color='#2B44FF'\r\n                            colorLabel='#FFFFFF'\r\n                            label='ENTRAR'\r\n                            onPress={entrar}\r\n                        />\r\n                    </View>\r\n                    <ModalValidation\r\n                        value={modalValidation}\r\n                        onClose={setModalValidation}\r\n                        title={'Ops..'}\r\n                        message={'Você precisa colocar um nome para continuar'}\r\n                    />\r\n                    <ModalError\r\n                        value={modalError}\r\n                        onClose={setModalError}\r\n                        message={'Ocorreu um erro com seu apelido, por favor feche o jogo e tente novamente mais tarde!'}\r\n                    />\r\n                </ScrollView>\r\n            </ImageBackground>\r\n        </SafeAreaView>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        justifyContent: 'center'\r\n    },\r\n    titleTest: {\r\n        marginLeft: 10,\r\n        fontSize: 20,\r\n        fontWeight: 'bold',\r\n        color: 'white'\r\n    },\r\n    input: {\r\n        backgroundColor: 'transparent',\r\n        color: 'white',\r\n        height: 35,\r\n        paddingHorizontal: 20,\r\n        borderColor: 10,\r\n        borderWidth: 1,\r\n        borderColor: '#5DA2FF',\r\n        borderRadius: 50,\r\n        width: 250\r\n    },\r\n    marginView: {\r\n        paddingHorizontal: 10,\r\n        marginVertical: 20\r\n    },\r\n    viewButton: {\r\n        marginTop: 10\r\n    }\r\n})"],"mappings":"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"},"metadata":{},"sourceType":"module"}