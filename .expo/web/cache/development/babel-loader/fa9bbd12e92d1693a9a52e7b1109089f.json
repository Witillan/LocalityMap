{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useNavigation } from '@react-navigation/native';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Fundo from \"../../assets/FundoTelaUser.png\";\nimport Logo from \"../../assets/MapaCirculoPNG.png\";\nimport ModalValidation from \"../../components/ModalValidation\";\nimport UserDao from \"../../db/User\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function GetNomeUser() {\n  var navigation = useNavigation();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      modalValidation = _useState2[0],\n      setModalValidation = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      nomeUser = _useState4[0],\n      setNomeUser = _useState4[1];\n\n  var entrar = function entrar() {\n    if (nomeUser == '' || nomeUser == null || nomeUser == undefined) {\n      setModalValidation(true);\n    }\n  };\n\n  return _jsx(SafeAreaView, {\n    style: {\n      flex: 1\n    },\n    children: _jsx(ImageBackground, {\n      source: Fundo,\n      style: {\n        flex: 1,\n        backgroundColor: '#59D89E',\n        justifyContent: 'center',\n        alignItems: 'center'\n      },\n      children: _jsxs(ScrollView, {\n        contentContainerStyle: {\n          flex: 1,\n          justifyContent: 'center'\n        },\n        children: [_jsxs(View, {\n          style: {\n            justifyContent: 'center',\n            alignItems: 'center'\n          },\n          children: [_jsx(ImageBackground, {\n            style: {\n              padding: 0,\n              width: 100,\n              height: 100,\n              justifyContent: 'center',\n              alignItems: 'center'\n            },\n            source: Logo,\n            children: _jsx(Text, {\n              style: {\n                padding: 0,\n                fontSize: 80,\n                color: 'white'\n              },\n              children: \"?\"\n            })\n          }), _jsx(Text, {\n            style: styles.titleTest,\n            children: \"LOCALITY MAP\"\n          })]\n        }), _jsx(View, {\n          style: styles.marginView,\n          children: _jsx(View, {\n            children: _jsx(TextInput, {\n              focusable: false,\n              style: styles.input,\n              onChangeText: setNomeUser,\n              value: nomeUser,\n              placeholder: \"Seu apelido\",\n              keyboardType: \"default\",\n              placeholderTextColor: \"white\"\n            })\n          })\n        }), _jsx(View, {\n          style: {\n            marginTop: 50,\n            width: '100%',\n            alignItems: 'center'\n          },\n          children: _jsx(TouchableOpacity, {\n            style: styles.button,\n            onPress: entrar,\n            children: _jsx(Text, {\n              style: {\n                color: 'white'\n              },\n              children: \"ENTRAR\"\n            })\n          })\n        }), _jsx(ModalValidation, {\n          value: modalValidation,\n          onChange: setModalValidation,\n          title: 'Esse é o título',\n          message: 'Mensagem de teste'\n        })]\n      })\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center'\n  },\n  titleTest: {\n    marginLeft: 10,\n    fontSize: 20,\n    fontWeight: 'bold',\n    color: 'white'\n  },\n  input: {\n    backgroundColor: 'transparent',\n    color: 'white',\n    height: 35,\n    paddingHorizontal: 20,\n    borderColor: 10,\n    borderWidth: 1,\n    borderColor: '#5DA2FF',\n    borderRadius: 50,\n    width: 250\n  },\n  marginView: {\n    paddingHorizontal: 10,\n    marginVertical: 20\n  },\n  viewButton: {\n    marginTop: 10\n  },\n  button: {\n    borderRadius: 20,\n    backgroundColor: '#2B44FF',\n    borderColor: 'white',\n    '&:focus': {\n      borderColor: '#1820C0'\n    },\n    color: 'white',\n    padding: 10,\n    width: 200,\n    alignItems: 'center'\n  }\n});","map":{"version":3,"sources":["D:/Projects/Aula/LocalityMap/scenes/NomeUser/GetNomeUser.js"],"names":["useNavigation","React","useCallback","useEffect","useState","Fundo","Logo","ModalValidation","UserDao","GetNomeUser","navigation","modalValidation","setModalValidation","nomeUser","setNomeUser","entrar","undefined","flex","backgroundColor","justifyContent","alignItems","padding","width","height","fontSize","color","styles","titleTest","marginView","input","marginTop","button","StyleSheet","create","container","marginLeft","fontWeight","paddingHorizontal","borderColor","borderWidth","borderRadius","marginVertical","viewButton"],"mappings":"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","sourcesContent":["import { useNavigation } from '@react-navigation/native';\r\nimport React, { useCallback, useEffect, useState } from 'react';\r\nimport { SafeAreaView, ScrollView, StyleSheet, Text, TextInput, TouchableOpacity, View, ImageBackground } from 'react-native';\r\nimport Fundo from '../../assets/FundoTelaUser.png';\r\nimport Logo from '../../assets/MapaCirculoPNG.png';\r\nimport ModalValidation from '../../components/ModalValidation';\r\n\r\nimport UserDao from '../../db/User';\r\n\r\nexport default function GetNomeUser() {\r\n    const navigation = useNavigation()\r\n    const [modalValidation, setModalValidation] = useState(false)\r\n\r\n    const [nomeUser, setNomeUser] = useState('');\r\n\r\n    const entrar = () => {\r\n        if (nomeUser == '' || nomeUser == null || nomeUser == undefined) {\r\n            setModalValidation(true)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <SafeAreaView style={{ flex: 1 }}>\r\n            <ImageBackground source={Fundo} style={{ flex: 1, backgroundColor: '#59D89E', justifyContent: 'center', alignItems: 'center' }}>\r\n                <ScrollView contentContainerStyle={{ flex: 1, justifyContent: 'center' }}>\r\n                    <View style={{ justifyContent: 'center', alignItems: 'center' }}>\r\n                        <ImageBackground style={{ padding: 0, width: 100, height: 100, justifyContent: 'center', alignItems: 'center' }} source={Logo}><Text style={{ padding: 0, fontSize: 80, color: 'white' }}>?</Text></ImageBackground>\r\n                        <Text style={styles.titleTest}>LOCALITY MAP</Text>\r\n                    </View>\r\n                    <View style={styles.marginView}>\r\n                        <View>\r\n                            <TextInput\r\n                                focusable={false}\r\n                                style={styles.input}\r\n                                onChangeText={setNomeUser}\r\n                                value={nomeUser}\r\n                                placeholder=\"Seu apelido\"\r\n                                keyboardType=\"default\"\r\n                                placeholderTextColor='white'\r\n                            />\r\n                        </View>\r\n                    </View>\r\n                    <View style={{ marginTop: 50, width: '100%', alignItems: 'center' }}>\r\n                        <TouchableOpacity\r\n                            style={styles.button}\r\n                            onPress={entrar}\r\n                        >\r\n                            <Text style={{ color: 'white' }}>ENTRAR</Text>\r\n                        </TouchableOpacity>\r\n                    </View>\r\n                    <ModalValidation\r\n                        value={modalValidation}\r\n                        onChange={setModalValidation}\r\n                        title={'Esse é o título'}\r\n                        message={'Mensagem de teste'}\r\n                    />\r\n                </ScrollView>\r\n            </ImageBackground>\r\n        </SafeAreaView>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        justifyContent: 'center'\r\n    },\r\n    titleTest: {\r\n        marginLeft: 10,\r\n        fontSize: 20,\r\n        fontWeight: 'bold',\r\n        color: 'white'\r\n    },\r\n    input: {\r\n        backgroundColor: 'transparent',\r\n        color: 'white',\r\n        height: 35,\r\n        paddingHorizontal: 20,\r\n        borderColor: 10,\r\n        borderWidth: 1,\r\n        borderColor: '#5DA2FF',\r\n        borderRadius: 50,\r\n        width: 250\r\n    },\r\n    marginView: {\r\n        paddingHorizontal: 10,\r\n        marginVertical: 20\r\n    },\r\n    viewButton: {\r\n        marginTop: 10\r\n    },\r\n    button: {\r\n        borderRadius: 20,\r\n        backgroundColor: '#2B44FF',\r\n        borderColor: 'white',\r\n        '&:focus': {\r\n            borderColor: '#1820C0'\r\n        },\r\n        color: 'white',\r\n        padding: 10,\r\n        width: 200,\r\n        alignItems: 'center'\r\n    }\r\n})"]},"metadata":{},"sourceType":"module"}