{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useFocusEffect, useNavigation } from '@react-navigation/native';\nimport React, { useCallback, useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Quizes() {\n  var navigation = useNavigation();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      refreshing = _useState2[0],\n      setRefreshing = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      listContatos = _useState4[0],\n      setListContatos = _useState4[1];\n\n  useFocusEffect(useCallback(function () {\n    setRefreshing(true);\n    ContatosDao.GetContatos().then(function (r) {\n      if (Platform.OS === 'android') {\n        console.log(r._array);\n        setListContatos(r._array);\n      } else {\n        console.log(r);\n        setListContatos(r);\n      }\n    }).finally(function () {\n      return setRefreshing(false);\n    });\n  }, []));\n\n  var formatarTelefone = function formatarTelefone(v) {\n    if (!v) {\n      return '';\n    }\n\n    var r = v.replace(/\\D/g, '');\n    r = r.replace(/^0/, '');\n\n    if (r.length >= 11) {\n      r = r.replace(/^(\\d{2})(\\d)(\\d{4})(\\d{4}).*/, '($1) $2 $3-$4');\n    }\n\n    return r;\n  };\n\n  var Item = function Item(_ref) {\n    var item = _ref.item;\n    return _jsxs(View, {\n      style: {\n        padding: 20\n      },\n      children: [_jsx(Text, {\n        children: item.nome || '---'\n      }), _jsx(Text, {\n        children: formatarTelefone(item.telefone) || '---'\n      })]\n    });\n  };\n\n  var renderItem = function renderItem(_ref2) {\n    var item = _ref2.item;\n    return _jsx(Item, {\n      item: item\n    });\n  };\n\n  var flatListItemSeparator = function flatListItemSeparator() {\n    return _jsx(View, {\n      style: {\n        height: 1,\n        width: \"100%\",\n        backgroundColor: \"#000\"\n      }\n    });\n  };\n\n  return _jsxs(SafeAreaView, {\n    style: {\n      flex: 1\n    },\n    children: [_jsx(Text, {\n      style: styles.titleTest,\n      children: \"Contatos\"\n    }), _jsx(FlatList, {\n      refreshing: refreshing,\n      data: listContatos,\n      renderItem: renderItem,\n      ItemSeparatorComponent: flatListItemSeparator,\n      keyExtractor: function keyExtractor(item, index) {\n        return \"\" + index;\n      },\n      ListEmptyComponent: function ListEmptyComponent() {\n        return _jsx(Text, {\n          children: 'Não há itens para exibir'\n        });\n      },\n      ListFooterComponent: function ListFooterComponent() {\n        return refreshing && _jsx(View, {\n          children: _jsx(Text, {\n            children: \"Carregando Contatos...\"\n          })\n        });\n      }\n    }), _jsx(View, {\n      style: {\n        marginTop: 20,\n        width: '100%'\n      },\n      children: _jsx(TouchableOpacity, {\n        style: styles.button,\n        onPress: function onPress() {\n          return navigation.navigate(\"NewContato\");\n        },\n        children: _jsx(Text, {\n          style: {\n            color: 'white'\n          },\n          children: \"Novo\"\n        })\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    paddingHorizontal: 20\n  },\n  titleTest: {\n    marginTop: 30,\n    marginLeft: 10,\n    fontSize: 20,\n    fontWeight: 'bold'\n  },\n  input: {\n    backgroundColor: 'transparent',\n    color: 'black',\n    height: 35,\n    paddingHorizontal: 20,\n    borderColor: 10,\n    borderWidth: 0.7,\n    borderRadius: 50\n  },\n  marginView: {\n    paddingHorizontal: 10,\n    marginVertical: 20\n  },\n  viewButton: {\n    marginTop: 10\n  },\n  button: {\n    borderRadius: 20,\n    color: 'white',\n    backgroundColor: '#2196f3',\n    padding: 10,\n    width: '100%',\n    alignItems: 'center'\n  }\n});","map":{"version":3,"sources":["D:/Projects/Aula/LocalityMap/scenes/Quizes/index.js"],"names":["useFocusEffect","useNavigation","React","useCallback","useState","useEffect","Quizes","navigation","refreshing","setRefreshing","listContatos","setListContatos","ContatosDao","GetContatos","then","r","Platform","OS","console","log","_array","finally","formatarTelefone","v","replace","length","Item","item","padding","nome","telefone","renderItem","flatListItemSeparator","height","width","backgroundColor","flex","styles","titleTest","index","marginTop","button","navigate","color","StyleSheet","create","container","justifyContent","paddingHorizontal","marginLeft","fontSize","fontWeight","input","borderColor","borderWidth","borderRadius","marginView","marginVertical","viewButton","alignItems"],"mappings":"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","sourcesContent":["import { useFocusEffect, useNavigation } from '@react-navigation/native';\r\nimport React, { useCallback, useState, useEffect } from 'react';\r\nimport { StyleSheet, Text, TouchableOpacity, View, SafeAreaView, FlatList, Platform } from 'react-native';\r\n\r\n// import ContatosDao from '../../db/ContatosDao';\r\n\r\nexport default function Quizes() {\r\n    const navigation = useNavigation()\r\n\r\n    const [refreshing, setRefreshing] = useState(false)\r\n    const [listContatos, setListContatos] = useState([])\r\n\r\n    useFocusEffect(useCallback(() => {\r\n        setRefreshing(true)\r\n        ContatosDao.GetContatos().then((r) => {\r\n            if (Platform.OS === 'android') {\r\n                console.log(r._array)\r\n                setListContatos(r._array)\r\n            }\r\n            else {\r\n                console.log(r)\r\n                setListContatos(r)\r\n            }\r\n        }).finally(() => setRefreshing(false))\r\n    }, []))\r\n\r\n    const formatarTelefone = (v) => {\r\n        if (!v) {\r\n            return ''\r\n        }\r\n        let r = v.replace(/\\D/g, '')\r\n        r = r.replace(/^0/, '')\r\n\r\n        if (r.length >= 11) {\r\n            r = r.replace(/^(\\d{2})(\\d)(\\d{4})(\\d{4}).*/, '($1) $2 $3-$4')\r\n        }\r\n        return r\r\n    }\r\n\r\n    const Item = ({ item }) => {\r\n        return (\r\n            <View style={{ padding: 20 }}>\r\n                <Text>{item.nome || '---'}</Text>\r\n                <Text>{formatarTelefone(item.telefone) || '---'}</Text>\r\n            </View>\r\n        )\r\n    }\r\n\r\n    const renderItem = ({ item }) => (\r\n        <Item item={item} />\r\n    )\r\n\r\n    const flatListItemSeparator = () => {\r\n        return (\r\n            <View\r\n                style={{\r\n                    height: 1,\r\n                    width: \"100%\",\r\n                    backgroundColor: \"#000\",\r\n                }}\r\n            />\r\n        );\r\n    }\r\n\r\n    return (\r\n        <SafeAreaView style={{ flex: 1 }}>\r\n            <Text style={styles.titleTest}>Contatos</Text>\r\n            <FlatList\r\n                refreshing={refreshing}\r\n                data={listContatos}\r\n                renderItem={renderItem}\r\n                ItemSeparatorComponent={flatListItemSeparator}\r\n                keyExtractor={(item, index) => `${index}`}\r\n                ListEmptyComponent={() => <Text>{'Não há itens para exibir'}</Text>}\r\n                ListFooterComponent={() => refreshing && (\r\n                    <View>\r\n                        <Text>Carregando Contatos...</Text>\r\n                    </View>\r\n                )}\r\n            />\r\n            <View style={{ marginTop: 20, width: '100%' }}>\r\n                <TouchableOpacity\r\n                    style={styles.button}\r\n                    onPress={() => navigation.navigate(\"NewContato\")}\r\n                >\r\n                    <Text style={{ color: 'white' }}>Novo</Text>\r\n                </TouchableOpacity>\r\n            </View>\r\n        </SafeAreaView>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        justifyContent: 'center',\r\n        paddingHorizontal: 20\r\n    },\r\n    titleTest: {\r\n        marginTop: 30,\r\n        marginLeft: 10,\r\n        fontSize: 20,\r\n        fontWeight: 'bold'\r\n    },\r\n    input: {\r\n        backgroundColor: 'transparent',\r\n        color: 'black',\r\n        height: 35,\r\n        paddingHorizontal: 20,\r\n        borderColor: 10,\r\n        borderWidth: 0.7,\r\n        borderRadius: 50\r\n    },\r\n    marginView: {\r\n        paddingHorizontal: 10,\r\n        marginVertical: 20\r\n    },\r\n    viewButton: {\r\n        marginTop: 10\r\n    },\r\n    button: {\r\n        borderRadius: 20,\r\n        color: 'white',\r\n        backgroundColor: '#2196f3',\r\n        padding: 10,\r\n        width: '100%',\r\n        alignItems: 'center'\r\n    }\r\n})"]},"metadata":{},"sourceType":"module"}