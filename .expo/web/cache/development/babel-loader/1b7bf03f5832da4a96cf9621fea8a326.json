{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport React, { useEffect, useState } from 'react';\nimport { ThemeProvider } from 'styled-components';\nimport { useDefaultStyleSheet } from \"./components/style\";\nimport Sqlite from \"./db/Sqlite\";\nimport ContatosScreen from \"./scenes/Contatos\";\nimport NavBarContatos from \"./scenes/Contatos/NavBar\";\nimport HomeScreen from \"./scenes/Home\";\nimport NomeUserScreen from \"./scenes/NomeUser/GetNomeUser\";\nimport SplashScreen from \"./scenes/Splash\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createNativeStackNavigator();\nexport default function App() {\n  var style = useDefaultStyleSheet();\n\n  function initProject() {\n    return _regeneratorRuntime.async(function initProject$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(Sqlite.runDDL().catch(function (err) {\n              return alert(err);\n            }));\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  useEffect(function () {\n    initProject();\n  }, []);\n  return _jsx(ThemeProvider, {\n    theme: style,\n    children: _jsx(NavigationContainer, {\n      initialRouteName: \"NomeUser\",\n      children: _jsxs(Stack.Navigator, {\n        children: [_jsx(Stack.Screen, {\n          name: \"NomeUser\",\n          component: NomeUserScreen,\n          options: {\n            title: 'NomeUser',\n            headerShown: false\n          }\n        }), _jsx(Stack.Screen, {\n          name: \"Splash\",\n          component: SplashScreen,\n          options: {\n            title: 'Splash',\n            headerShown: false\n          }\n        }), _jsx(Stack.Screen, {\n          name: \"Contatos\",\n          component: ContatosScreen,\n          options: {\n            title: 'Contatos',\n            headerShown: false,\n            header: function header() {\n              return _jsx(NavBarContatos, {});\n            }\n          }\n        }), _jsx(Stack.Screen, {\n          name: \"Home\",\n          component: HomeScreen,\n          options: {\n            title: 'Home',\n            headerShown: false\n          }\n        })]\n      })\n    })\n  });\n}","map":{"version":3,"sources":["D:/Projects/Aula/LocalityMap/App.js"],"names":["NavigationContainer","createNativeStackNavigator","React","useEffect","useState","ThemeProvider","useDefaultStyleSheet","Sqlite","ContatosScreen","NavBarContatos","HomeScreen","NomeUserScreen","SplashScreen","Stack","App","style","initProject","runDDL","catch","err","alert","title","headerShown","header"],"mappings":";AAAA,SAASA,mBAAT,QAAoC,0BAApC;AACA,SAASC,0BAAT,QAA2C,gCAA3C;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,aAAT,QAA8B,mBAA9B;AAEA,SAASC,oBAAT;AACA,OAAOC,MAAP;AACA,OAAOC,cAAP;AACA,OAAOC,cAAP;AACA,OAAOC,UAAP;AACA,OAAOC,cAAP;AACA,OAAOC,YAAP;;;AAEA,IAAMC,KAAK,GAAGZ,0BAA0B,EAAxC;AAEA,eAAe,SAASa,GAAT,GAAe;AAC5B,MAAMC,KAAK,GAAGT,oBAAoB,EAAlC;;AAEA,WAAeU,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACQT,MAAM,CAACU,MAAP,GAAgBC,KAAhB,CAAsB,UAAAC,GAAG;AAAA,qBAAIC,KAAK,CAACD,GAAD,CAAT;AAAA,aAAzB,CADR;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAIAhB,EAAAA,SAAS,CAAC,YAAM;AACda,IAAAA,WAAW;AACZ,GAFQ,EAEN,EAFM,CAAT;AAIA,SACE,KAAC,aAAD;AAAe,IAAA,KAAK,EAAED,KAAtB;AAAA,cACE,KAAC,mBAAD;AAAqB,MAAA,gBAAgB,EAAC,UAAtC;AAAA,gBACE,MAAC,KAAD,CAAO,SAAP;AAAA,mBACE,KAAC,KAAD,CAAO,MAAP;AAAc,UAAA,IAAI,EAAC,UAAnB;AAA8B,UAAA,SAAS,EAAEJ,cAAzC;AAAyD,UAAA,OAAO,EAAE;AAAEU,YAAAA,KAAK,EAAE,UAAT;AAAqBC,YAAAA,WAAW,EAAE;AAAlC;AAAlE,UADF,EAEE,KAAC,KAAD,CAAO,MAAP;AAAc,UAAA,IAAI,EAAC,QAAnB;AAA4B,UAAA,SAAS,EAAEV,YAAvC;AAAqD,UAAA,OAAO,EAAE;AAAES,YAAAA,KAAK,EAAE,QAAT;AAAmBC,YAAAA,WAAW,EAAE;AAAhC;AAA9D,UAFF,EAGE,KAAC,KAAD,CAAO,MAAP;AAAc,UAAA,IAAI,EAAC,UAAnB;AAA8B,UAAA,SAAS,EAAEd,cAAzC;AAAyD,UAAA,OAAO,EAAE;AAAEa,YAAAA,KAAK,EAAE,UAAT;AAAqBC,YAAAA,WAAW,EAAE,KAAlC;AAAyCC,YAAAA,MAAM,EAAE;AAAA,qBAAM,KAAC,cAAD,KAAN;AAAA;AAAjD;AAAlE,UAHF,EAIE,KAAC,KAAD,CAAO,MAAP;AAAc,UAAA,IAAI,EAAC,MAAnB;AAA0B,UAAA,SAAS,EAAEb,UAArC;AAAiD,UAAA,OAAO,EAAE;AAAEW,YAAAA,KAAK,EAAE,MAAT;AAAiBC,YAAAA,WAAW,EAAE;AAA9B;AAA1D,UAJF;AAAA;AADF;AADF,IADF;AAYD","sourcesContent":["import { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport React, { useEffect, useState } from 'react';\nimport { ThemeProvider } from 'styled-components';\n\nimport { useDefaultStyleSheet } from './components/style';\nimport Sqlite from './db/Sqlite';\nimport ContatosScreen from './scenes/Contatos';\nimport NavBarContatos from './scenes/Contatos/NavBar';\nimport HomeScreen from './scenes/Home';\nimport NomeUserScreen from './scenes/NomeUser/GetNomeUser';\nimport SplashScreen from './scenes/Splash';\n\nconst Stack = createNativeStackNavigator();\n\nexport default function App() {\n  const style = useDefaultStyleSheet()\n\n  async function initProject() {\n    await Sqlite.runDDL().catch(err => alert(err))\n  }\n\n  useEffect(() => {\n    initProject()\n  }, [])\n\n  return (\n    <ThemeProvider theme={style}>\n      <NavigationContainer initialRouteName=\"NomeUser\">\n        <Stack.Navigator>\n          <Stack.Screen name=\"NomeUser\" component={NomeUserScreen} options={{ title: 'NomeUser', headerShown: false }} />\n          <Stack.Screen name=\"Splash\" component={SplashScreen} options={{ title: 'Splash', headerShown: false }} />\n          <Stack.Screen name=\"Contatos\" component={ContatosScreen} options={{ title: 'Contatos', headerShown: false, header: () => <NavBarContatos /> }} />\n          <Stack.Screen name=\"Home\" component={HomeScreen} options={{ title: 'Home', headerShown: false }} />\n        </Stack.Navigator>\n      </NavigationContainer>\n    </ThemeProvider>\n  );\n}"]},"metadata":{},"sourceType":"module"}