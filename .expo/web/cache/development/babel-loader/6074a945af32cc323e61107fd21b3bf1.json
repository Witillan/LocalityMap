{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ModalLoading from \"../Modals/ModalLoading\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function BuscarDados() {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      message = _useState4[0],\n      setMessage = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      paises = _useState6[0],\n      setPaises = _useState6[1];\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      estados = _useState8[0],\n      setEstatos = _useState8[1];\n\n  var _useState9 = useState([]),\n      _useState10 = _slicedToArray(_useState9, 2),\n      cidades = _useState10[0],\n      setCidades = _useState10[1];\n\n  var buscarPaises = function buscarPaises() {\n    axios.get(\"https://servicodados.ibge.gov.br/api/v1/paises\").then(function (v) {\n      v.data.forEach(function (e) {\n        console.log(e.id);\n      });\n    }).catch(function (e) {\n      console.log(\"Erro ao buscar cidades: \" + e.message);\n    });\n  };\n\n  var buscarCidades = function buscarCidades() {\n    axios.get(\"https://servicodados.ibge.gov.br/api/v1/localidades/municipios\").then(function (v) {\n      v.data.forEach(function (e) {\n        console.log(e.id);\n      });\n    }).catch(function (e) {\n      console.log(\"Erro ao buscar cidades: \" + e.message);\n    });\n  };\n\n  useEffect(function () {\n    setLoading(true);\n    setMessage(\"Buscando Cidades\");\n    buscarCidades();\n    setLoading(false);\n  }, []);\n  return _jsx(View, {\n    children: _jsx(ModalLoading, {\n      loading: loading,\n      onClose: setLoading,\n      message: message\n    })\n  });\n}","map":{"version":3,"sources":["D:/Projects/Aula/LocalityMap/components/Ultils/BuscarDados.js"],"names":["React","useEffect","useState","axios","ModalLoading","BuscarDados","loading","setLoading","message","setMessage","paises","setPaises","estados","setEstatos","cidades","setCidades","buscarPaises","get","then","v","data","forEach","e","console","log","id","catch","buscarCidades"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,OAAOC,YAAP;;AAEA,eAAe,SAASC,WAAT,GAAuB;AAClC,kBAA8BH,QAAQ,CAAC,KAAD,CAAtC;AAAA;AAAA,MAAOI,OAAP;AAAA,MAAgBC,UAAhB;;AACA,mBAA8BL,QAAQ,CAAC,EAAD,CAAtC;AAAA;AAAA,MAAOM,OAAP;AAAA,MAAgBC,UAAhB;;AAEA,mBAA4BP,QAAQ,CAAC,EAAD,CAApC;AAAA;AAAA,MAAOQ,MAAP;AAAA,MAAeC,SAAf;;AACA,mBAA8BT,QAAQ,CAAC,EAAD,CAAtC;AAAA;AAAA,MAAOU,OAAP;AAAA,MAAgBC,UAAhB;;AACA,mBAA8BX,QAAQ,CAAC,EAAD,CAAtC;AAAA;AAAA,MAAOY,OAAP;AAAA,MAAgBC,UAAhB;;AAEA,MAAMC,YAAY,GAAG,SAAfA,YAAe,GAAM;AACvBb,IAAAA,KAAK,CAACc,GAAN,CAAU,gDAAV,EACKC,IADL,CACU,UAACC,CAAD,EAAO;AACTA,MAAAA,CAAC,CAACC,IAAF,CAAOC,OAAP,CAAe,UAAAC,CAAC,EAAI;AAChBC,QAAAA,OAAO,CAACC,GAAR,CAAYF,CAAC,CAACG,EAAd;AACH,OAFD;AAGH,KALL,EAMKC,KANL,CAMW,UAACJ,CAAD,EAAO;AACVC,MAAAA,OAAO,CAACC,GAAR,8BAAuCF,CAAC,CAACd,OAAzC;AACH,KARL;AASH,GAVD;;AAYA,MAAMmB,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AACxBxB,IAAAA,KAAK,CAACc,GAAN,CAAU,gEAAV,EACKC,IADL,CACU,UAACC,CAAD,EAAO;AACTA,MAAAA,CAAC,CAACC,IAAF,CAAOC,OAAP,CAAe,UAAAC,CAAC,EAAI;AAChBC,QAAAA,OAAO,CAACC,GAAR,CAAYF,CAAC,CAACG,EAAd;AACH,OAFD;AAGH,KALL,EAMKC,KANL,CAMW,UAACJ,CAAD,EAAO;AACVC,MAAAA,OAAO,CAACC,GAAR,8BAAuCF,CAAC,CAACd,OAAzC;AACH,KARL;AASH,GAVD;;AAYAP,EAAAA,SAAS,CAAC,YAAM;AACZM,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAE,IAAAA,UAAU,CAAC,kBAAD,CAAV;AACAkB,IAAAA,aAAa;AACbpB,IAAAA,UAAU,CAAC,KAAD,CAAV;AACH,GALQ,EAKN,EALM,CAAT;AAOA,SACI,KAAC,IAAD;AAAA,cACI,KAAC,YAAD;AACI,MAAA,OAAO,EAAED,OADb;AAEI,MAAA,OAAO,EAAEC,UAFb;AAGI,MAAA,OAAO,EAAEC;AAHb;AADJ,IADJ;AASH","sourcesContent":["import React, { useEffect, useState } from \"react\"\r\nimport axios from \"axios\"\r\nimport { View } from \"react-native-web\"\r\nimport ModalLoading from \"../Modals/ModalLoading\"\r\n\r\nexport default function BuscarDados() {\r\n    const [loading, setLoading] = useState(false)\r\n    const [message, setMessage] = useState(\"\")\r\n\r\n    const [paises, setPaises] = useState([])\r\n    const [estados, setEstatos] = useState([])\r\n    const [cidades, setCidades] = useState([])\r\n\r\n    const buscarPaises = () => {\r\n        axios.get(\"https://servicodados.ibge.gov.br/api/v1/paises\")\r\n            .then((v) => {\r\n                v.data.forEach(e => {\r\n                    console.log(e.id)\r\n                });\r\n            })\r\n            .catch((e) => {\r\n                console.log(`Erro ao buscar cidades: ${e.message}`)\r\n            })\r\n    }\r\n\r\n    const buscarCidades = () => {\r\n        axios.get(\"https://servicodados.ibge.gov.br/api/v1/localidades/municipios\")\r\n            .then((v) => {\r\n                v.data.forEach(e => {\r\n                    console.log(e.id)\r\n                });\r\n            })\r\n            .catch((e) => {\r\n                console.log(`Erro ao buscar cidades: ${e.message}`)\r\n            })\r\n    }\r\n\r\n    useEffect(() => {\r\n        setLoading(true)\r\n        setMessage(\"Buscando Cidades\")\r\n        buscarCidades()\r\n        setLoading(false)\r\n    }, [])\r\n\r\n    return (\r\n        <View>\r\n            <ModalLoading\r\n                loading={loading}\r\n                onClose={setLoading}\r\n                message={message}\r\n            />\r\n        </View>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}